<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.ccut.template.user.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="cn.ccut.template.user.model.User" >
    <id column="uid" property="uid" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="role" property="role" jdbcType="CHAR" />
    <result column="code" property="code" jdbcType="CHAR" />
    <result column="state" property="state" jdbcType="BIT" />
  </resultMap>
  <sql id="Base_Column_List" >
    uid, name, password, email, role, code, state
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where uid = #{uid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where uid = #{uid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.ccut.template.user.model.User" >
    insert into user (uid, name, password, 
      email, role, code, state
      )
    values (#{uid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{role,jdbcType=CHAR}, #{code,jdbcType=CHAR}, #{state,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.ccut.template.user.model.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="uid != null" >
        uid,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="role != null" >
        role,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="state != null" >
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="role != null" >
        #{role,jdbcType=CHAR},
      </if>
      <if test="code != null" >
        #{code,jdbcType=CHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.ccut.template.user.model.User" >
    update user
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="role != null" >
        role = #{role,jdbcType=CHAR},
      </if>
      <if test="code != null" >
        code = #{code,jdbcType=CHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=BIT},
      </if>
    </set>
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.ccut.template.user.model.User" >
    update user
    set name = #{name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      role = #{role,jdbcType=CHAR},
      code = #{code,jdbcType=CHAR},
      state = #{state,jdbcType=BIT}
    where uid = #{uid,jdbcType=INTEGER}
  </update>
</mapper>